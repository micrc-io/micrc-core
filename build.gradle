plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.3' apply false
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group = 'io.micrc.core'
version = '0.0.1'
sourceCompatibility = '11'

ext {
    set('camel.version', '3.18.1')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "${colibri_nexus}"
        credentials {
            username "${colibri_nexus_user}"
            password "${colibri_nexus_pass}"
        }
    }
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    // annotation - micrc-annotations: gradle task - publishToMavenLocal
    implementation "io.micrc.core:micrc-annotations:0.0.1"

    implementation "org.springframework.boot:spring-boot-starter"

    // for lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // persistence
    runtimeOnly "mysql:mysql-connector-java"
    // db for init, local
    implementation "com.h2database:h2"
    implementation "org.liquibase:liquibase-core"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "com.zaxxer:HikariCP"

    // integration camel for spring-boot base
    implementation "org.apache.camel.springboot:camel-spring-boot-starter:${property('camel.version')}"
    // bean integration
    implementation "org.apache.camel.springboot:camel-bean-starter:${property('camel.version')}"

    // http/websocket endpoints for consuming and producing, used by rest openapi and rest
    implementation "org.apache.camel.springboot:camel-undertow-starter:${property('camel.version')}"
    // openapi producer - derivatives producer adapter
    implementation "org.apache.camel.springboot:camel-rest-openapi-starter:${property('camel.version')}"
    // rest consumer - presentations and derivatives consumer adapter
    implementation "org.apache.camel.springboot:camel-rest-starter:${property('camel.version')}"

    // message endpoints for consuming and producing - message producer and consumer adapter
    implementation "org.apache.camel.springboot:camel-spring-rabbitmq-starter:${property('camel.version')}"

    // metrics
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // unit/integrate test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

// 执行publishToMavenLocal后，其他工程可正常引入
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

nexusPublishing {
    repositories {
        create("colibri") {
            nexusUrl.set(uri("${colibri_nexus}"))
            snapshotRepositoryUrl.set(uri("${colibri_nexus}"))
            username.set("${colibri_nexus_user}")
            password.set("${colibri_nexus_pass}")
        }
        create("central") {
        }
    }
}
